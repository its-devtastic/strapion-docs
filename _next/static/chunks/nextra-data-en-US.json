{"/configuration/contentTypes":{"title":"contentTypes","data":{"":"ContentTypeConfig[]A list of content type definitions.","types#Types":"interface ContentTypeConfig {\napiID: string;\nfields: FieldDefinition[];\nname?: string;\ndescription?: string;\nicon?: React.ReactNode;\ngetEntityUrl?(entity: Entity): string;\n}\n\nexport interface FieldDefinition {\npath: string;\nlabel?: string;\ndescription?: string;\nhint?: string;\ninput?: string;\ninputProps?: Record<string, any>;\n/** Only for relation and enum fields */\nrenderItem?(item: any, utils: { t: TFunction }): React.ReactNode;\n}"}},"/configuration/icon":{"title":"icon","data":{"":"stringPath relative to the public directory referencing an icon image. Used as a favicon, in the app header and in the authentication screens."}},"/configuration":{"title":"Configuration","data":{"":"Strapion is very customizable. Most of the configuration is done by modifying the strapion.config.ts file. If you've\nused the Create Strapion App tool it will have created it for you. To make managing the config a bit easier it also extracted\nsome files to a config folder. This is just for convenience, feel free to arrange it as you see fit."}},"/configuration/plugins":{"title":"plugins","data":{"":"StrapionPlugin[]A list of Strapion plugins. Plugins get and return a Strapion config object.","types#Types":"interface StrapionPlugin {\n(config: StrapionConfig): StrapionConfig;\n}"}},"/configuration/interfaceLanguages":{"title":"interfaceLanguages","data":{"":"(\"en\" | \"nl\")[]A list of languages. The user can set the UI language in any of these languages through the profile screen."}},"/configuration/strapiUrl":{"title":"strapiUrl","data":{"":"RequiredstringThe URL of your Strapi instance."}},"/configuration/title":{"title":"title","data":{"":"stringSets the <title> value. For example ACME CMS."}},"/":{"title":"Strapion","data":{"":"Strapion is an alternative Strapi admin for content creators. It is customizable, translatable and mobile-friendly.","features#Features":"üåê Multilingual (i18next)\nüé® Customizable theme (antd and Tailwind CSS)\nüß© Multiple injection zones\nüß± Swappable components\nüìú Custom pages\nüîå Plugins\nüíØ 100% TypeScript","quick-start#Quick Start":"Create a new Strapion project with the Create Strapion App tool:\nnpx create-strapion-app@latest cms\nNext, go into the newly created cms directory and install the dependencies. When that's done, run\nnpm run dev\nYour Strapion project will run on http://localhost:1338","motivation#Motivation":"Strapi is the most popular JavaScript headless CMS available but its admin is notoriously uncustomizable. Strapion\nprovides an alternative admin that is built with React and easy to customize and extend. It uses popular frameworks and\nlibraries that should be familiar to many developers. The goal of Strapion is not to be a full replacement of Strapi's\nown admin. Creating content types, setting up login providers and other plugin management tasks are things that content\ncreators never have to deal with. These features only confuse most admin users. Instead, Strapion wants to be the \"third wheel\"\nin the Jamstack relationship: the frontend (e.g. Next.js), the API (Strapi) and the content management UI (Strapion).","limitations#Limitations":"Strapion is not a drop-in replacement of the Strapi admin, and for two reasons. The first reason is that Strapion targets\ncontent creators and does not support features such as content creation and plugin settings. But another reason is that\nStrapion takes a different approach on how to configure the admin. Instead of putting all configuration in the database -\nmaking it hard to migrate between environments, do translations, etc. - Strapion takes most configuration from a single\nconfiguration object."}}}